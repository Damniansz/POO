/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package principal;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import control.Conexion;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;


/**
 *
 * @author ESPE
 */
public class Form_profe extends javax.swing.JInternalFrame{
    Conexion cc=new Conexion();
    Connection con=cc.conexion();

    /**
     * Creates new form Form_profe
     */
    public Form_profe() {
        initComponents();
        mostrarDatos();
        TablaProfesor.removeColumn(TablaProfesor.getColumnModel().getColumn(0));
        
        TablaProfesor.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            int fila = TablaProfesor.rowAtPoint(evt.getPoint());
            if (fila >= 0) {
                TablaProfesor.setRowSelectionInterval(fila, fila);
            }
        }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnNombre = new javax.swing.JTextField();
        btnApellido = new javax.swing.JTextField();
        btnCelular = new javax.swing.JTextField();
        btnTitulo = new javax.swing.JComboBox<>();
        btnEstado = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaProfesor = new javax.swing.JTable();
        btnGuardar1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnEmail = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnRefrescar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        jLabel1.setText("Profesores");

        jLabel2.setText("Apellidos:");

        jLabel4.setText("Nombres:");

        jLabel5.setText("Celular:");

        jLabel3.setText("Titulo:");

        jLabel6.setText("Estado:");

        btnNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNombreActionPerformed(evt);
            }
        });

        btnApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApellidoActionPerformed(evt);
            }
        });

        btnCelular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCelularActionPerformed(evt);
            }
        });

        btnTitulo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Licenciado", "Ingeniero", "Magister", "Doctor" }));
        btnTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTituloActionPerformed(evt);
            }
        });

        btnEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Jubilado", " " }));
        btnEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEstadoActionPerformed(evt);
            }
        });

        TablaProfesor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TablaProfesor);

        btnGuardar1.setText("GUARDAR");
        btnGuardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardar1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Email:");

        btnEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmailActionPerformed(evt);
            }
        });

        jButton3.setText("ACTUALIZAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnRefrescar.setText("REFRESCAR");
        btnRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrescarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(33, 33, 33)
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNombre)
                            .addComponent(btnApellido)
                            .addComponent(btnCelular, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                            .addComponent(btnEmail, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(jLabel1))
                            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                                .addComponent(btnGuardar1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEditar)))
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnRefrescar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(56, 56, 56)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(btnCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(btnEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(btnTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(btnEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar1)
                    .addComponent(jButton3)
                    .addComponent(btnEliminar)
                    .addComponent(btnEditar)
                    .addComponent(btnRefrescar))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private String codigoProfesorSeleccionado;
    public void mostrarDatos(){
     String titulos[] = {"Código", "Nombre", "Apellido", "Celular", "Email", "Título", "Estado"};
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    String SQL = "SELECT * FROM profesor";
    try {
        Statement st = (Statement) con.createStatement();
        ResultSet rs = st.executeQuery(SQL);
        while (rs.next()) {
            Object[] registro = new Object[7];
            registro[0] = rs.getString("profe_codigo");
            registro[1] = rs.getString("profe_nombre");
            registro[2] = rs.getString("profe_apellido");
            registro[3] = rs.getString("profe_celular");
            registro[4] = rs.getString("profe_mail");
            registro[5] = rs.getString("profe_titulo");
            registro[6] = rs.getString("profe_estado");
            modelo.addRow(registro);
        }
        TablaProfesor.setModel(modelo);
        // Ocultar la columna profe_codigo (índice 0)
        TablaProfesor.getColumnModel().getColumn(0).setWidth(0);
        TablaProfesor.getColumnModel().getColumn(0).setMinWidth(0);
        TablaProfesor.getColumnModel().getColumn(0).setMaxWidth(0);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al mostrar los datos: " + e);
    }
    
        TablaProfesor.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            int fila = TablaProfesor.rowAtPoint(evt.getPoint());
            if (fila >= 0) {
                TablaProfesor.setRowSelectionInterval(fila, fila);
                codigoProfesorSeleccionado = TablaProfesor.getValueAt(fila, 0).toString();
            }
        }
    });
    }
    
    public void limpiarDatos(){
        btnApellido.setText("");
        btnNombre.setText("");
        btnCelular.setText("");
        btnEmail.setText("");
        btnTitulo.setSelectedItem(null);
        btnEstado.setSelectedItem(null);
    }
    
    public void eliminarDatos(int filaSeleccionada){
     String codigoProfesor = TablaProfesor.getValueAt(filaSeleccionada, 0).toString();
    String SQL = "DELETE FROM profesor WHERE profe_codigo = ?";
    try {
        PreparedStatement pst = (PreparedStatement) con.prepareStatement(SQL);
        pst.setString(1, codigoProfesor);
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registro eliminado correctamente.");
        mostrarDatos(); // Actualizar la tabla después de eliminar el registro
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al eliminar el registro: " + e);
    }
    }
        
    private void btnNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnNombreActionPerformed

    private void btnApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnApellidoActionPerformed

    private void btnCelularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCelularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCelularActionPerformed

    private void btnEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEstadoActionPerformed

    private void btnTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTituloActionPerformed

    private void btnGuardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardar1ActionPerformed
        String SQL = "INSERT INTO profesor (profe_nombre, profe_apellido, profe_celular, profe_mail, profe_titulo, profe_estado)values(?,?,?,?,?,?)";
        try {
            int select = btnTitulo.getSelectedIndex();
            int select2 = btnEstado.getSelectedIndex();
            PreparedStatement pst = (PreparedStatement) con.prepareStatement(SQL);
            pst.setString(1,btnNombre.getText());
            pst.setString(2,btnApellido.getText());
            pst.setString(3,btnCelular.getText());
            pst.setString(4,btnEmail.getText());
            pst.setString(5,btnTitulo.getSelectedItem().toString());
            pst.setString(6,btnEstado.getSelectedItem().toString());
            pst.execute();
            
        } catch(Exception e){
            System.out.println(e);
        } 
        // TODO add your handling code here:// TODO add your handling code here:
    }//GEN-LAST:event_btnGuardar1ActionPerformed

    private void btnEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEmailActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        mostrarDatos();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
     int filaSeleccionada = TablaProfesor.getSelectedRow();
    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(null, "Seleccione un registro para eliminar.");
        return;
    }
    eliminarDatos(filaSeleccionada);
    mostrarDatos(); // Actualizar la tabla después de eliminar el registro
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        
        // Verificar si se ha seleccionado un estudiante en la tabla
    if (codigoProfesorSeleccionado == null) {
        JOptionPane.showMessageDialog(null, "Seleccione un estudiante para editar.");
        return;
    }

    String SQL = "SELECT * FROM profesor WHERE profe_codigo = ?";
    try {
        PreparedStatement pst = (PreparedStatement) con.prepareStatement(SQL);
        pst.setString(1, codigoProfesorSeleccionado);
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            // Cargar los datos del estudiante seleccionado en los campos de texto
            btnNombre.setText(rs.getString("profe_nombre"));
            btnApellido.setText(rs.getString("profe_apellido"));
            btnCelular.setText(rs.getString("profe_celular"));
            btnEmail.setText(rs.getString("profe_mail"));
            btnTitulo.setSelectedItem(rs.getString("profe_estado"));
            btnEstado.setSelectedItem(rs.getString("profe_estado"));
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al cargar los datos del estudiante: " + e);
    }
        
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefrescarActionPerformed
        
        int filaSeleccionada = TablaProfesor.getSelectedRow();
         btnRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrescarActionPerformed(evt);
            }
        });
        String codigoProfesor = TablaProfesor.getValueAt(filaSeleccionada, 0).toString();
        String nuevoNombre = btnNombre.getText();   
        String nuevoApellido = btnApellido.getText();
        String nuevoCelular = btnCelular.getText();
        String nuevoEmail = btnEmail.getText();
        String nuevoTitulo= btnTitulo.getSelectedItem().toString();
        String nuevoEstado = btnEstado.getSelectedItem().toString();
        


        String SQL = "UPDATE profesor SET profe_nombre=?, profe_apellido=?, profe_celular=?, profe_mail=?, profe_titulo=?, profe_estado=? WHERE profe_codigo=?";
        try {
            PreparedStatement pst = (PreparedStatement) con.prepareStatement(SQL);
            
            pst.setString(1, nuevoNombre);
            pst.setString(2, nuevoApellido);
            pst.setString(3, nuevoCelular);
            pst.setString(4, nuevoEmail);
            pst.setString(5, nuevoTitulo);
            pst.setString(6, nuevoEstado);
            pst.setString(7, codigoProfesor);
            

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Registro actualizado correctamente.");
            mostrarDatos(); // Actualizar la tabla después de la actualización
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al actualizar el registro: " + e);
        }
    }                                      

    private void btneliminarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
          int filaSeleccionada = TablaProfesor.getSelectedRow();
            if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(null, "Seleccione un registro para eliminar.");
            return;
    }
    eliminarDatos(filaSeleccionada);
    mostrarDatos();
    }//GEN-LAST:event_btnRefrescarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Form_profe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Form_profe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Form_profe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Form_profe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Form_profe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaProfesor;
    private javax.swing.JTextField btnApellido;
    private javax.swing.JTextField btnCelular;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JTextField btnEmail;
    private javax.swing.JComboBox<String> btnEstado;
    private javax.swing.JButton btnGuardar1;
    private javax.swing.JTextField btnNombre;
    private javax.swing.JButton btnRefrescar;
    private javax.swing.JComboBox<String> btnTitulo;
    private javax.swing.JButton jButton3;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
